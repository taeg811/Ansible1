---
- name: configure webserver 
  hosts: web
  gather_facts: true
  become: true
  vars:
#    nginx_port_no_tls: 80
    nginx_port_crt: 443
  tasks:
  
    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      become: false 
      openssl_privatekey:
        path: "./files/{{ inventory_hostname }}_priv.pem"
      delegate_to: localhost
    
    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      become: false
      openssl_csr:
        path: "./files/{{ inventory_hostname }}.csr"
        privatekey_path: "./files/{{ inventory_hostname }}_priv.pem"
        country_name: RU
        organization_name: university
        email_address: lena@uven.ru
        common_name: "{{ inventory_hostname }}"
      delegate_to: localhost

    - name: Generate a Self Signed OpenSSL certificate
      become: false
      openssl_certificate:
        path: "./files/{{ inventory_hostname }}.crt"
        privatekey_path: "./files/{{ inventory_hostname }}_priv.pem"
        csr_path: "./files/{{ inventory_hostname }}.csr"
        provider: selfsigned
      delegate_to: localhost

    - name: create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644

    - name: install nginx
      yum:
        name: nginx
        update_cache: true
        state: present
    - debug:
        msg: "VM is {{ inventory_hostname }}"
    
    - name: create dir /etc/ssl/private for .pem  key
      ansible.builtin.file:
        path: /etc/ssl/private
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: create dir /etc/ssl/crt  for .crt 
      ansible.builtin.file:
        path: /etc/ssl/crt
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'

    - name: create dir /etc/ssl/csr  for .csr
      ansible.builtin.file:
        path: /etc/ssl/csr
        state: directory
        owner: root
        group: root
        mode: '0755'        

    - name: copy cert
      copy:
        src: "{{ inventory_hostname }}.crt"
        dest: "/etc/ssl/crt/{{ inventory_hostname }}.crt"
        owner: nginx
        group: nginx
        mode: 0444

    - name: copy private key
      copy:
        src: "{{ inventory_hostname }}_priv.pem"
        dest: "/etc/ssl/private/{{ inventory_hostname }}_priv.pem"
        owner: root
        group: nginx 
        mode: 0440      
    
    - name: copy csr
      copy:
        src: "{{ inventory_hostname }}.csr"
        dest: "/etc/ssl/csr/{{ inventory_hostname }}.csr"
        owner: root
        group: nginx
        mode: 0440


    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx config file   template
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/site.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: nginx
        group: nginx
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: insert firewalld rule for nginx  open ports 443 #Ð¸ 80
      firewalld:
 #       port: "{{ nginx_port_no_tls }}/tcp"
        port: "{{ nginx_port_crt }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true

  post_tasks:
    - name: check web site from control server
      uri:
        url: "https://{{ inventory_hostname }}:{{ nginx_port_crt }}"
        return_content: true
        validate_certs: false
      #connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
